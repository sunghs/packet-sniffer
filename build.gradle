import java.nio.charset.StandardCharsets

buildscript {
    ext {
        name = "packet-sniffer"
        group = "sunghs.packet.sniff"
        version = "1.0.0-SNAPSHOT"
        javaVersion = JavaVersion.VERSION_11
    }
    repositories {
    }
}

plugins {
    id 'org.springframework.boot' version '2.3.2.RELEASE'
    id 'io.spring.dependency-management' version '1.0.9.RELEASE'
    id 'java'
}

sourceCompatibility = "${javaVersion}"
targetCompatibility = "${javaVersion}"

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

tasks.withType(JavaCompile) {
    options.encoding = StandardCharsets.UTF_8.name()
}

dependencies {
    implementation('org.springframework.boot:spring-boot-starter')
    //implementation('org.springframework.boot:spring-boot-starter-data-jpa')
    implementation('org.springframework.kafka:spring-kafka')
    implementation('org.apache.kafka:kafka-streams')
    implementation('org.projectlombok:lombok')

    implementation('commons-codec:commons-codec:1.9')

    implementation('org.pcap4j:pcap4j-core:1.8.2')
    implementation('org.pcap4j:pcap4j-packetfactory-static:1.8.2')

    annotationProcessor('org.springframework.boot:spring-boot-configuration-processor')
    annotationProcessor('org.projectlombok:lombok')

    testImplementation('org.springframework.boot:spring-boot-starter-test') {
        exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
    }
}

test {
    useJUnitPlatform()
}
